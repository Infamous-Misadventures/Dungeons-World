buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    flatDir {
        dirs 'mods'
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-${mod_version}"
group = 'com.infamous.dungeons_world' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "dungeons_world"

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel:"official", version:"${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dungeons_world {
                    source sourceSets.main
                }
            }
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dungeons_world {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'dungeons_world', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                dungeons_world {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url "https://www.cursemaven.com"
    }
}


dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'

    //compileOnly fg.deobf("mezz.jei:jei-1.16.3:7.6.0.49:api")
    //runtimeOnly fg.deobf("mezz.jei:jei-1.16.3:7.6.0.49")

    //Tools
    runtimeOnly fg.deobf("loadnbtblock:loadnbtblock:1.0")
    //runtimeOnly fg.deobf("blame:blame:1.16.5-3.0.2-forge")
    //runtimeOnly fg.deobf("structure_toolkit:structure_toolkit:1.16.5-0.0.1")
    implementation fg.deobf("curse.maven:structure-toolkit-484907:3419956")
    runtimeOnly fg.deobf("curse.maven:structure-toolkit-484907:3419956")
    //runtimeOnly fg.deobf("curse.maven:terraforged-363820:3414123")
    runtimeOnly fg.deobf("curse.maven:natures-compass-252848:3382150")
    runtimeOnly fg.deobf("curse.maven:blame-406201:3440093")
//    runtimeOnly fg.deobf("curse.maven:cyanide-541676:3511740")

    // Dungeons Mods
    runtimeOnly fg.deobf('software.bernie.geckolib:geckolib-forge-1.16.5:3.0.45')
//    runtimeOnly fg.deobf("dungeons_mobs:dungeons_mobs:1.16.5-2.0.0")
//    runtimeOnly fg.deobf("dungeons_libraries:dungeons_libraries:1.16.5-0.0.1")
    runtimeOnly fg.deobf("curse.maven:blame-406201:3440093")
    implementation fg.deobf("curse.maven:dungeons-gear-401247:3377033")
//    runtimeOnly fg.deobf("curse.maven:dungeons-gear-401247:3377033")

    //compat
    implementation fg.deobf("curse.maven:cavebiomeapi-441706:3489595")

    //Compat tests
//    implementation fg.deobf("curse.maven:dungeons_content-423533:3506109")

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "dungeons_world",
                "Specification-Vendor": "Infamous1",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Infamous1",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}